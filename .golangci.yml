version: "2"
run:
  go: "1.24"
  build-tags:
    - tools
    - e2e
  allow-parallel-runners: true
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bodyclose
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - errcheck
    - errchkjson
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goprintffuncname
    - gosec
    - govet
    - importas
    - ineffassign
    - misspell
    - nakedret
    - nilerr
    - noctx
    - nolintlint
    - nosprintfhostport
    - prealloc
    - predeclared
    - reassign
    - revive
    - rowserrcheck
    - staticcheck
    - thelper
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace
  settings:
    gocritic:
      disabled-checks:
        - appendAssign
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - evalOrder
        - ifElseChain
        - octalLiteral
        - regexpSimplify
        - sloppyReassign
        - truncateCmp
        - typeDefFirst
        - unnamedResult
        - unnecessaryDefer
        - whyNoLint
        - wrapperFunc
      enabled-tags:
        - experimental
    gocyclo:
      min-complexity: 20
    godot:
      scope: toplevel
      exclude:
        - ^ \+.*
        - ^ ANCHOR.*
    gosec:
      excludes:
        - G307 # Deferring unsafe method "Close" on type "\*os.File"
        - G108 # Profiling endpoint is automatically exposed on /debug/pprof
    importas:
      alias:
        # Kubernetes
        - pkg: k8s.io/api/core/v1
          alias: corev1
        - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1
          alias: apiextensionsv1
        - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
          alias: metav1
        - pkg: k8s.io/apimachinery/pkg/api/errors
          alias: apierrors
        - pkg: k8s.io/apimachinery/pkg/util/errors
          alias: kerrors
        # Controller Runtime
        - pkg: sigs.k8s.io/controller-runtime
          alias: ctrl
        # CAPI
        - pkg: sigs.k8s.io/cluster-api/api/v1alpha3
          alias: capiv1alpha3
        - pkg: sigs.k8s.io/cluster-api/api/v1alpha4
          alias: capiv1alpha4
        - pkg: sigs.k8s.io/cluster-api/api/v1beta1
          alias: clusterv1beta1
        # CAPI-IBMCLOUD
        - pkg: sigs.k8s.io/cluster-api-provider-ibmcloud/api/v1beta1
          alias: infrav1beta1
        - pkg: sigs.k8s.io/cluster-api-provider-ibmcloud/api/v1beta2
          alias: infrav1
      no-unaliased: true
    nolintlint:
      require-specific: true
      allow-unused: false
    staticcheck:
      checks:
        - all
        # QF1006: could lift into loop condition
        - -QF1006
        # QF1007: could merge conditional assignment into variable declaration
        - -QF1007
        # QF1008 could remove embedded field from selector
        - -QF1008
  exclusions:
    generated: lax
    rules:
      # Exclude some packages or code to require comments, for example test code, or fake clients.
      - linters:
          - revive
        text: 'exported: exported method .*\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported'
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?(S|s)?etenv). is not checked
      - linters:
          - revive
        text: exported (method|function|type|const) (.+) should have comment or be unexported
        source: (func|type).*Fake.*
      - linters:
          - revive
        path: fake_\.go
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      - linters:
          - revive
        path: (framework|e2e)/.*.go
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      # Disable unparam "always receives" which might not be really
      # useful when building libraries.
      - linters:
          - unparam
        text: always receives
      # Dot imports for gomega or ginkgo are allowed
      # within test files.
      - path: _test\.go
        text: should not use dot imports
      - path: (framework|e2e)/.*.go
        text: should not use dot imports
      - path: _test\.go
        text: cyclomatic complexity
      # Append should be able to assign to a different var/slice.
      - linters:
          - gocritic
        text: 'appendAssign: append result not assigned to the same slice'
      # Disable linters for conversion
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: 'SA1019: in.(.+) is deprecated'
      - linters:
          - revive
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: exported (method|function|type|const) (.+) should have comment or be unexported
      - linters:
          - revive
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: 'var-naming: don''t use underscores in Go names;'
      - linters:
          - revive
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: 'receiver-naming: receiver name'
      - linters:
          - staticcheck
        text: "ST1003: should not use underscores in Go names;"
        path: .*(api|types)\/.*\/.*conversion.*\.go$
      - linters:
          - staticcheck
        text: "ST1016: methods on the same type should have the same receiver name"
        path: .*(api|types)\/.*\/.*conversion.*\.go$
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: 'ST1003: should not use underscores in Go names;'
      - linters:
          - staticcheck
        path: .*(api|types)\/.*\/.*conversion.*\.go$
        text: 'ST1016: methods on the same type should have the same receiver name'
      # hack/tools
      - linters:
          - typecheck
        text: import (".+") is a program, not an importable package
        path: ^tools\.go$
      # We don't care about defer in for loops in test files.
      - linters:
          - gocritic
        path: _test\.go
        text: 'deferInLoop: Possible resource leak, ''defer'' is called in the ''for'' loop'
    paths:
      - zz_generated.*\.go$
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gci
    - gofmt
    - goimports
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/IBM)
        - prefix(k8s.io)
        - prefix(sigs.k8s.io)
        - prefix(sigs.k8s.io/cluster-api)
        - prefix(sigs.k8s.io/cluster-api-provider-ibmcloud)
        - blank
        - dot
  exclusions:
    generated: lax
    paths:
      - zz_generated.*\.go$
      - third_party$
      - builtin$
      - examples$
      - _test\.go
