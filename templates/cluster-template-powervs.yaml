apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
  name: "${CLUSTER_NAME}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - ${POD_CIDR:="192.168.0.0/16"}
    serviceDomain: ${SERVICE_DOMAIN:="cluster.local"}
    services:
      cidrBlocks:
        - ${SERVICE_CIDR:="10.128.0.0/12"}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: IBMPowerVSCluster
    name: "${CLUSTER_NAME}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "${CLUSTER_NAME}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: IBMPowerVSCluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
  name: "${CLUSTER_NAME}"
spec:
  serviceInstanceID: "${IBMPOWERVS_SERVICE_INSTANCE_ID}"
  network:
    name: "${IBMPOWERVS_NETWORK_NAME}"
  controlPlaneEndpoint:
    host: "${IBMPOWERVS_VIP_EXTERNAL}"
    port: 6443
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  version: "${KUBERNETES_VERSION}"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: IBMPowerVSMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: "${CLUSTER_NAME}-control-plane"
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        certSANs:
          - "${IBMPOWERVS_VIP}"
          - "${IBMPOWERVS_VIP_EXTERNAL}"
      controlPlaneEndpoint: ${IBMPOWERVS_VIP}:6443
      controllerManager:
        extraArgs:
          enable-hostpath-provisioner: "true"
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: ibmpowervs://${CLUSTER_NAME}/'{{ v1.local_hostname }}'
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
        name: '{{ v1.local_hostname }}'
    joinConfiguration:
      discovery:
        bootstrapToken:
          apiServerEndpoint: ${IBMPOWERVS_VIP}:6443
          token: ""
          caCertHashes: [ ]
          unsafeSkipCAVerification: false
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: ibmpowervs://${CLUSTER_NAME}/'{{ v1.local_hostname }}'
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
        name: '{{ v1.local_hostname }}'
    useExperimentalRetryJoin: true
    preKubeadmCommands:
      - hostname "{{ v1.local_hostname }}"
      - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
      - echo "127.0.0.1   localhost" >>/etc/hosts
      - echo "127.0.0.1   {{ v1.local_hostname }}" >>/etc/hosts
      - echo "{{ v1.local_hostname }}" >/etc/hostname
    files:
      - path: /etc/kubernetes/manifests/kube-vip.yaml
        content: |
          apiVersion: v1
          kind: Pod
          metadata:
            creationTimestamp: null
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - manager
              env:
              - name: vip_arp
                value: "true"
              - name: port
                value: "6443"
              - name: vip_interface
                value: env2
              - name: vip_cidr
                value: "${IBMPOWERVS_VIP_CIDR}"
              - name: cp_enable
                value: "true"
              - name: cp_namespace
                value: kube-system
              - name: vip_ddns
                value: "false"
              - name: svc_enable
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: vip_leaseduration
                value: "5"
              - name: vip_renewdeadline
                value: "3"
              - name: vip_retryperiod
                value: "1"
              - name: address
                value: "${IBMPOWERVS_VIP}"
              image: ghcr.io/kube-vip/kube-vip:v0.4.4
              imagePullPolicy: Always
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostAliases:
            - hostnames:
              - kubernetes
              ip: 127.0.0.1
            hostNetwork: true
            volumes:
            - hostPath:
                path: /etc/kubernetes/admin.conf
              name: kubeconfig
          status: {}
        owner: "root:root"
        permissions: "0744"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: IBMPowerVSMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      serviceInstanceID: "${IBMPOWERVS_SERVICE_INSTANCE_ID}"
      sshKey: "${IBMPOWERVS_SSHKEY_NAME}"
      image:
        name: "${IBMPOWERVS_IMAGE_NAME}"
      network:
        name: "${IBMPOWERVS_NETWORK_NAME}"
      memoryGiB: ${IBMPOWERVS_CONTROL_PLANE_MEMORY:=4}
      processors: ${IBMPOWERVS_CONTROL_PLANE_PROCESSORS:="0.25"}
      systemType: ${IBMPOWERVS_CONTROL_PLANE_SYSTYPE:="s922"}
      processorType: ${IBMPOWERVS_CONTROL_PLANE_PROCTYPE:="Shared"}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: IBMPowerVSMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: IBMPowerVSMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      serviceInstanceID: "${IBMPOWERVS_SERVICE_INSTANCE_ID}"
      sshKey: "${IBMPOWERVS_SSHKEY_NAME}"
      image:
        name: "${IBMPOWERVS_IMAGE_NAME}"
      network:
        name: "${IBMPOWERVS_NETWORK_NAME}"
      memoryGiB: ${IBMPOWERVS_COMPUTE_MEMORY:=4}
      processors: ${IBMPOWERVS_COMPUTE_PROCESSORS:="0.25"}
      systemType: ${IBMPOWERVS_COMPUTE_SYSTYPE:="s922"}
      processorType: ${IBMPOWERVS_COMPUTE_PROCTYPE:="Shared"}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    cluster.x-k8s.io/control-plane: ""
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      joinConfiguration:
        discovery:
          bootstrapToken:
            apiServerEndpoint: ${IBMPOWERVS_VIP}:6443
            token: ""
            caCertHashes: []
            unsafeSkipCAVerification: false
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: ibmpowervs://${CLUSTER_NAME}/'{{ v1.local_hostname }}'
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          name: '{{ v1.local_hostname }}'
      preKubeadmCommands:
        - hostname "{{ v1.local_hostname }}"
        - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
        - echo "127.0.0.1   localhost" >>/etc/hosts
        - echo "127.0.0.1   {{ v1.local_hostname }}" >>/etc/hosts
        - echo "{{ v1.local_hostname }}" >/etc/hostname
